2.) What is the “time‐complexity” of your function (how many comparisons are needed for n‐elements in the input list):
a : 1
b : n-1
b : (n-1)/2

3+4:
1 < 2 ->  True
2 < 3 ->  True
3 < 0 ->  False
False	<-- [1, 2, 3, 0, 4, 5, 6, 7, 8, 9]
4 < 8 ->  True
8 < 12 ->  True
12 < 12 ->  True
12 < 24 ->  True
24 < 36 ->  True
True	<-- [4, 8, 12, 12, 24, 36]
True	<-- []
True	<-- [2]
1 < 2 ->  True
True	<-- [1, 2]
2 < 1 ->  False
False	<-- [2, 1]

6:
0	<-- Smith		--> freq: 1.006
245	<-- Mendoza		--> freq: 0.043
21	<-- Rodriguez		--> freq: 0.229
462	<-- Abbott		--> freq: 0.025
-1	<-- Blokes
250	<-- Brewer		--> freq: 0.042
999	<-- Vang		--> freq: 0.012
440	<-- Zimmerman		--> freq: 0.026
59	<-- Bailey		--> freq: 0.115

7:
What is the time‐complexity of your function (how many comparisons are needed for n‐elements in the input list of names):
a : 1
b : n-1
b : (n-1)/2
